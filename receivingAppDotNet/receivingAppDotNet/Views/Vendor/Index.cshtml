@model IEnumerable<receivingAppDotNet.Models.Vendor>

@{
    ViewBag.Section = "Vendors";
    ViewBag.Title = "Vendors";
}

<h2>Index</h2>

<p>
    <a href="#" id="createNewVendor">Create New</a>
</p>
<table class="table" id="vendorsList">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Address1)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Zip)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr data-partId="@item.Id">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Zip)
            </td>
            <td>
                @using (Html.BeginForm("Delete", "Vendor"))
                {

                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                    @:|
                    <input type="hidden" name="id" value="@item.Id" />
                    <a class="deleteVendorLink" href="#">Delete</a>
                }
            </td>
        </tr>
    }

</table>

<div style="display: none;">
    <div id="dialog-confirm" title="Delete this item?">
        <p>Delete this item?</p>
    </div>
</div>

<div class="hidden">
    <form id="createNewVendorForm">
        <div class="form-horizontal" id="createNewFormContainer">
            <hr>

            <div class="form-group">
                <label class="control-label col-md-4" for="Name">Name</label>
                <div class="col-md-5">
                    <input class="text-box single-line" id="Name" name="Name" type="text" value="">
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" for="Address1">Address1</label>
                <div class="col-md-5">
                    <input class="text-box single-line" id="Address1" name="Address1" type="text" value="">
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" for="City">City</label>
                <div class="col-md-5">
                    <input class="text-box single-line" id="City" name="City" type="text" value="">
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" for="State">State</label>
                <div class="col-md-5">
                    <input class="text-box single-line" id="State" name="State" type="text" value="">
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4" for="Zip">Zip</label>
                <div class="col-md-5">
                    <input class="text-box single-line" id="Zip" name="Zip" type="text" value="">
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $('#createNewVendor').on('click', function() {
        $('#createNewVendorForm').dialog({
            resizable: false,
            width: 500,
            modal: true,
            buttons: {
                "Create": function () {
                    var data = $('#createNewVendorForm').serialize();
                    $.ajax({
                        type: 'POST',
                        url: '/Vendor/Create',
                        data: data,
                        context: this,
                        title: "New Vendor"
                    }).done(function (result) {
                        // Look at all this lovely markup
                        $('#vendorsList tbody').append('' +
                            '<tr><td>' + result.Name + '</td>' +
                            '<td>' + result.Address1 + '</td>' +
                            '<td>' + result.City + '</td>' +
                            '<td>' + result.State + '</td>' +
                            '<td>' + result.Zip + '</td>' +
                            '<td><form action="/Vendor/Delete" method="post"><a href="/Vendor/Edit/' + result.Id + '">Edit</a> | ' +
                            '<input type="hidden" name="id" value="' + result.Id + '">' +
                            '<a class="deleteVendorLink" href="#">Delete</a>' +
                            '</form></td>');

                        $(this).dialog("close");
                        $(this).find('input').val('');
                    });

                },
                Cancel: function() {
                    $(this).dialog("close");
                    $(this).first('input').val('');
                }
            }
        });
    });

    // javascript called via an event
    // NOTE this intentionally binds to items that already exist on the page and won't work on new items
    // This will give another place to talk about how managing events is tricky
    $('.deleteVendorLink').on('click', function () {
        var vendorId = $(this).parents('tr').find('.partId').val();

        $("#dialog-confirm").dialog({
            resizable: false,
            height: 200,
            modal: true,
            buttons: {
                "Delete this item": function () {
                    $(this).dialog("close");
                    $.ajax({
                        type: "POST",
                        url: "/Vendor/Delete",
                        data: { Id: vendorId },
                        context: this,
                        title: "Delete This?"
                    }).done(function() {
                        $('#vendorsList').find('tr[data-partId="' + vendorId + '"]').remove();
                    });
                },
                Cancel: function () {
                    $(this).dialog("close");
                }
            }
        });

        return false;
    });
</script>